// Code generated by counterfeiter. DO NOT EDIT.
package v3fakes

import (
	"sync"

	"code.cloudfoundry.org/cli/actor/v3action"
	"code.cloudfoundry.org/cli/command/v3"
)

type FakeV3SetDropletActor struct {
	SetAppDropletStub        func(appName string, dropletGUID string) (v3action.Warnings, error)
	setAppDropletMutex       sync.RWMutex
	setAppDropletArgsForCall []struct {
		appName     string
		dropletGUID string
	}
	setAppDropletReturns struct {
		result1 v3action.Warnings
		result2 error
	}
	setAppDropletReturnsOnCall map[int]struct {
		result1 v3action.Warnings
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeV3SetDropletActor) SetAppDroplet(appName string, dropletGUID string) (v3action.Warnings, error) {
	fake.setAppDropletMutex.Lock()
	ret, specificReturn := fake.setAppDropletReturnsOnCall[len(fake.setAppDropletArgsForCall)]
	fake.setAppDropletArgsForCall = append(fake.setAppDropletArgsForCall, struct {
		appName     string
		dropletGUID string
	}{appName, dropletGUID})
	fake.recordInvocation("SetAppDroplet", []interface{}{appName, dropletGUID})
	fake.setAppDropletMutex.Unlock()
	if fake.SetAppDropletStub != nil {
		return fake.SetAppDropletStub(appName, dropletGUID)
	}
	if specificReturn {
		return ret.result1, ret.result2
	}
	return fake.setAppDropletReturns.result1, fake.setAppDropletReturns.result2
}

func (fake *FakeV3SetDropletActor) SetAppDropletCallCount() int {
	fake.setAppDropletMutex.RLock()
	defer fake.setAppDropletMutex.RUnlock()
	return len(fake.setAppDropletArgsForCall)
}

func (fake *FakeV3SetDropletActor) SetAppDropletArgsForCall(i int) (string, string) {
	fake.setAppDropletMutex.RLock()
	defer fake.setAppDropletMutex.RUnlock()
	return fake.setAppDropletArgsForCall[i].appName, fake.setAppDropletArgsForCall[i].dropletGUID
}

func (fake *FakeV3SetDropletActor) SetAppDropletReturns(result1 v3action.Warnings, result2 error) {
	fake.SetAppDropletStub = nil
	fake.setAppDropletReturns = struct {
		result1 v3action.Warnings
		result2 error
	}{result1, result2}
}

func (fake *FakeV3SetDropletActor) SetAppDropletReturnsOnCall(i int, result1 v3action.Warnings, result2 error) {
	fake.SetAppDropletStub = nil
	if fake.setAppDropletReturnsOnCall == nil {
		fake.setAppDropletReturnsOnCall = make(map[int]struct {
			result1 v3action.Warnings
			result2 error
		})
	}
	fake.setAppDropletReturnsOnCall[i] = struct {
		result1 v3action.Warnings
		result2 error
	}{result1, result2}
}

func (fake *FakeV3SetDropletActor) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.setAppDropletMutex.RLock()
	defer fake.setAppDropletMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeV3SetDropletActor) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ v3.V3SetDropletActor = new(FakeV3SetDropletActor)
